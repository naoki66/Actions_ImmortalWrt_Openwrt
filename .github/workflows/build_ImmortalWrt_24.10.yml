# .github/workflows/compile_immortalwrt_openwrt_24_10.yml
name: 编译 immortalwrt openwrt‑24.10

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: '20 2 * * 2'

env:
  TZ: Asia/Shanghai
  DEBIAN_FRONTEND: noninteractive
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: x64.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh

concurrency:
  group: build-openwrt-24.10
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      actions: write

    steps:
      - name: 检出 Workflow 仓库
        uses: actions/checkout@v4.2.2
        with:
          path: workflow
          fetch-depth: 1

      - name: 设置构建环境
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y --no-install-recommends \
            ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 \
            ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
            git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
            libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
            libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full \
            patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons \
            squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir && sudo chown $USER:$GROUPS /workdir
          echo "TIME_START=$(date '+%Y年%m月%d日%H时%M分')" >> $GITHUB_ENV
          echo "TIME_EPOCH_START=$(date +%s)" >> $GITHUB_ENV

      - name: 克隆 ImmortalWrt 源码
        working-directory: /workdir
        run: |
          git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt
          [ -L $GITHUB_WORKSPACE/openwrt ] || ln -s /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: 恢复 DL 缓存
        uses: actions/cache@v4.2.3
        with:
          path: /workdir/openwrt/dl
          key: dl-openwrt-24.10

      - name: 恢复 Feeds 缓存
        uses: actions/cache@v4.2.3
        with:
          path: /workdir/openwrt/feeds
          key: feeds-${{ hashFiles('workflow/' + env.FEEDS_CONF, 'workflow/' + env.DIY_P1_SH) }}
          restore-keys: feeds-

      - name: 应用自定义 Feeds 与脚本
        run: |
          [ -e workflow/$FEEDS_CONF ] && cp workflow/$FEEDS_CONF /workdir/openwrt/feeds.conf.default
          chmod +x workflow/$DIY_P1_SH
          pushd /workdir/openwrt
          $GITHUB_WORKSPACE/workflow/$DIY_P1_SH
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          popd

      - name: 生成上游更新日志（git log）
        run: |
          mkdir -p /workdir/changelog
          cd /workdir/openwrt

          # 拉取最近 30 条历史
          git fetch --deepen=30 || true
          git -C feeds/packages fetch --deepen=30 || true
          git -C feeds/luci     fetch --deepen=30 || true

          LOG_BASE=$(git log --date=short --pretty="- [%ad] %s" --no-merges -n 15)
          LOG_PKG=$(git -C feeds/packages log --date=short --pretty="- [%ad] %s" --no-merges -n 10 || echo "feeds/packages 不是 git 仓库")
          LOG_LUCI=$(git -C feeds/luci log --date=short --pretty="- [%ad] %s" --no-merges -n 10 || echo "feeds/luci 不是 git 仓库")

          {
            echo "📦 openwrt-24.10 分支上游更新日志"
            echo
            echo "### immortalwrt（最近 15 条）"
            echo "$LOG_BASE"
            echo
            echo "### packages（最近 10 条）"
            echo "$LOG_PKG"
            echo
            echo "### luci（最近 10 条）"
            echo "$LOG_LUCI"
          } > /workdir/changelog/complete_changelog.txt

      - name: 上传更新日志产物
        uses: actions/upload-artifact@v4.6.2
        with:
          name: changelog
          path: /workdir/changelog/complete_changelog.txt

      - name: 加载配置并执行 DIY‑part2
        run: |
          [ -e workflow/files ] && cp -r workflow/files /workdir/openwrt/
          [ -e workflow/$CONFIG_FILE ] && cp workflow/$CONFIG_FILE /workdir/openwrt/.config
          chmod +x workflow/$DIY_P2_SH
          pushd /workdir/openwrt
          $GITHUB_WORKSPACE/workflow/$DIY_P2_SH
          popd

      - name: 下载源代码包
        working-directory: /workdir/openwrt
        run: |
          make defconfig
          make download -j$(nproc)
          find dl -size -1024c -delete

      - name: 编译固件
        id: compile
        working-directory: /workdir/openwrt
        run: |
          mkdir -p logs
          CORES=$(nproc)
          echo "使用 $CORES 线程开始编译"
          make -j$CORES > logs/build.log 2>&1 || make -j1 V=s >> logs/build.log 2>&1
          echo "TIME_END=$(date '+%Y年%m月%d日%H时%M分')" >> $GITHUB_ENV

      - name: 构建失败时上传日志
        if: failure()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: build-log
          path: /workdir/openwrt/logs/

      - name: 计算构建耗时
        if: always()
        run: |
          TIME_EPOCH_END=$(date +%s)
          echo "TIME_EPOCH_END=$TIME_EPOCH_END" >> $GITHUB_ENV
          DURATION=$((TIME_EPOCH_END - TIME_EPOCH_START))
          D_H=$((DURATION / 3600))
          D_M=$(((DURATION % 3600) / 60))
          D_S=$((DURATION % 60))
          echo "TIME_DURATION=${D_H}时${D_M}分${D_S}秒" >> $GITHUB_ENV

      - name: 整理输出路径
        id: organize
        run: |
          FIRMWARE_DIR=$(find /workdir/openwrt/bin/targets -type f -name '*.img*' -print -quit | xargs -I {} dirname {})
          echo "FIRMWARE_DIR=$FIRMWARE_DIR" >> $GITHUB_ENV

      - name: 上传固件产物
        uses: actions/upload-artifact@v4.6.2
        with:
          name: openwrt-24.10-${{ github.run_number }}
          path: ${{ env.FIRMWARE_DIR }}

      - name: 创建 GitHub 发布版本
        uses: softprops/action-gh-release@v2.3.2
        with:
          token: ${{ secrets.ACTIONS_TRIGGER_PAT }}
          tag_name: openwrt-24.10-${{ github.run_number }}
          body_path: /workdir/changelog/complete_changelog.txt
          files: ${{ env.FIRMWARE_DIR }}/*

      - name: 清理旧 Workflow 记录
        uses: Mattraks/delete-workflow-runs@v2.0.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 2
          keep_minimum_runs: 3

      - name: 清理旧 Release
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
          keep_latest: 15
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TRIGGER_PAT }}

      - name: 发送 Pushplus 通知
        run: |
          curl -s http://www.pushplus.plus/send -X POST -H "Content-Type: application/json" -d '{
            "title":"GitHub Actions 编译 immortalwrt‑24.10 完成!",
            "content":"开始时间: ${{ env.TIME_START }}<br/>结束时间: ${{ env.TIME_END }}<br/>耗时: ${{ env.TIME_DURATION }}<br/><br/>源码更新日志请查看 Release 或附件。",
            "token":"${{ secrets.PUSHPLUS_TOKEN }}",
            "channel":"cp"
          }'
